/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-11-11 07:28:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1604883835917L));
    _jspx_dependants.put("jar:file:/D:/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ex05/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.9.1.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.1/handlebars.js\"></script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>댓글</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>[댓글]</h1>\r\n");
      out.write("\t<div id = \"divInsert\">\r\n");
      out.write("\t\t<input type = \"text\" id = \"txtReply\" size = 50>\r\n");
      out.write("\t\t<input type = \"button\" id = \"btnReply\" value = \"등록\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id = \"divReply\"></div>\r\n");
      out.write("\t<script id = \"temp\" type = \"text/x-handlebars-template\">\r\n");
      out.write("\t\t {{#each .}}\r\n");
      out.write("\t\t\t<div rno=\"{{rno}}\">\r\n");
      out.write("        \t    {{rno}}:{{reply}}\r\n");
      out.write("        \t    <span>{{replyer}}</span>\r\n");
      out.write("        \t    <span>{{updateDate}}</span>\r\n");
      out.write("\t\t\t\t<button class = \"btnDelete\">삭제</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("     \t {{/each}}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar page = 1;\r\n");
      out.write("\tvar bno = 100;\r\n");
      out.write("\tgetList();\r\n");
      out.write("\tfunction getList() {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\turl : \"/reply/list\",\r\n");
      out.write("\t\t\tdata : {\"page\" : page, \"bno\" : bno},\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tvar temp = Handlebars.compile($(\"#temp\").html());\r\n");
      out.write("\t\t\t\t$(\"#divReply\").html(temp(data));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t$(\"#txtReply\").keydown(function(key){\r\n");
      out.write("\t\tif (key.keyCode == 13) {\r\n");
      out.write("\t\t\tvar reply = $(\"#txtReply\").val().trim();\r\n");
      out.write("\t\t\tif (reply.length == 0) {\r\n");
      out.write("\t\t\t\talert(\"내용을 입력하세요\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!confirm(\"등록?\")) {\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\t\t\turl : \"/reply/insert\",\r\n");
      out.write("\t\t\t\t\t\tdata : {\"bno\" : bno, \"reply\" : reply, \"replyer\" : \"guest\"},\r\n");
      out.write("\t\t\t\t\t\tsuccess : function() {\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#txtReply\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\tgetList();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t$(\"#divReply\").on(\"click\", \"button\", function(){\r\n");
      out.write("\t\tvar rno = $(this).parent().attr(\"rno\");\r\n");
      out.write("\t\tif(!confirm(\"삭제?\")) {\r\n");
      out.write("\t\t\treturn;\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\turl : \"/reply/delete\",\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tsuccess : function() {\r\n");
      out.write("\t\t\t\t\tgetList();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
